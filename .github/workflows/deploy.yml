name: Deploy Judge0

on:
  release:
    types: [published]

env:
  ACCOUNT_ID: 990066513532
  AWS_REGION: us-east-1
  ECS_CLUSTER_NAME: judge0-cluster
  ECS_SERVICE_NAME: judge0-service
  ECR_REPO: edugatorlabs/judge0
  TASKDEF: judge0-taskdef
  PIPELINE_ID: ${{ github.run_id }}-${{ github.run_number }}

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_ID }}:role/GitHubDeploymentRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build, Tag, and Push Docker image to ECR
        run: |
          IMAGE_URI=${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.PIPELINE_ID }}
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Update Task Definition Image
        id: register-task-def
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ env.TASKDEF }} \
            --query 'taskDefinition' \
            > taskdef.json

          jq --arg IMAGE "$IMAGE_URI" '.containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .registeredAt, .registeredBy, .compatibilities)' taskdef.json > new-taskdef.json

          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://new-taskdef.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)

          echo "NEW_TASK_DEF_ARN=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Update ECS Service to Use New Task Definition
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER_NAME }} \
            --service ${{ env.ECS_SERVICE_NAME }} \
            --task-definition ${{ env.NEW_TASK_DEF_ARN }} \
            --force-new-deployment